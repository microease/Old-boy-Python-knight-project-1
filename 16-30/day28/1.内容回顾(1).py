# 正则表达式
# 元字符
    # \w \s \d  \W \S \D \n \t
    # \b ^ $
    #  |
    # ()
    # [] [^]
    # .
# 量词
    # * + ?
    # {n} {n,} {n,m}

# 贪婪和惰性匹配
# 默认贪婪 ：尽可能多的匹配 —— 回溯算法
# 惰性匹配 ：尽可能少的匹配 —— 量词?
    # .*?x

# 元字符       只能约束一个字符位置上的值
# 元字符+量词  贪婪匹配
# 元字符+量词? 非贪婪

# re模块
# findall ：
    # 返回一个列表，是所有匹配的项
    # 没有匹配到会返回一个空列表
    # 如果遇到分组，findall会优先显示分组中的内容
    # (?:正则表达式) 取消分组优先
# search ：
    # 返回一个对象，通过.group()取值
    # 没有匹配到会返回None，没有.group()方法
    # 如果遇到分组，通过索引取各分组中的内容
    # group(0)永远是完整的匹配内容
# 参数 ： 正则表达式、待匹配字符串