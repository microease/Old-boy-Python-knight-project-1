01 昨日内容回顾
    类：具有相同属性和方法的一类事物
    对象：类的具体体现

    函数vs面向对象
        函数：
            封装一个功能
        类：
            封装多个相关联的功能，功能的集合。
            抽象，站在上帝的角度考虑。
            公共的模板。
    类的结构：
        class 类名:
            name1 = 'alex' 静态属性
            def __init__(self,name,age):
                self.name=name  self.name  对象的属性名
                self.age=age
            def func(self): 方法
                pass
    类名：
        操作属性
            1，查看类中全部的属性及方法 __dict__
                类名.__dict__
            2,对某个属性进行删改查，以及增加某个属性，万能的  点.
                类名.age = 18
                类名.name = 'wusir'
                del 类名.name
                类名.name

        操作方法  尽量不用类名操作方法
            类名.func(111)
    对象：
        如何实例化对象？
        obj = 类名（'太白',24） 实例化过程，实例化一个对象
        内部经历了三个阶段：
            1，在内存中开辟一个对象空间，只有一个类对象指针。
            2，自动执行__init__方法，并将对象空间传给self。
            3，给对象空间封装相应的属性。

        1，对象操作对象的属性：
            1，对象查看对象的中的所有属性。__dict__
                obj.__dict__
            2，对象操作对象中的属性。
                obj.name         查
                obj.sex = '男'   增
                obj.name = 'alex'改
                del obj.name     删

        2,对象查看类中的属性。
            obj.name1

         3, 对象执行类中的方法：
            obj.func()
            类名.func(obj)

    类名称空间，对象名称空间：






02 作业讲解
03 组合
04 购物车作业
05 本周作业
