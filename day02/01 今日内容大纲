01 昨日内容回顾
    python2x python3x区别：
        python2x：源码重复，不规范。
        python3x：源码规范，优美，清晰，简单。


    编译型：将代码一次性全部转化成字节码。
        代表语言：C，C++
        优点：执行速度快。
        缺点：不能跨平台，开发速度慢。

    解释型：代码从上至下逐行解释。
        代表语言：python
        优点：开发效率高，便于调试，可以跨平台。
        缺点：执行速度相对低。

    python：Cpython，Jpython,Ironpython,pypy ....

    python2x python3x区别：
        python2x：默认编码ASCII，代码首行：# -*- encoding:utf-8 -*- 。
        python3x：默认编码utf-8。

    变量：
        1，必须有数字，字母，下划线任意组合。
        2，不能以数字开头。
        3，不能是python的关键字。
        4，具有可描述性。
        5，不能使用拼音，中文。
        6，不能过长。
        驼峰体： OldBoy
        下划线： old_boy

    常量：长期不变的量。
        将字母全部大写常量，放在文件的最上面。

    注释：单行：#  多行： ''' '''  """ """

    基础数据类型：
    数字：
            int：整型
            float：浮点型。
            long int ：
            ....
            计算，+ - * / % ...
            计数
    str：
        在python中 引号引起来的数据就是字符串。
        ''    ""  如果说 你的字符串中含有引号，就需要单双引号配合使用。
                s1 = '小明说："你说的对"'
        """ """ 对于字符串是多行则用三引号。
        字符串 可拼接 + ，可与数字相乘 *
    bool：
        True，False

    用户输入： input  全部是字符串类型。
    数据类型的转化：
    int()  str()

    if:
        if 条件:
            代码块

        if 条件:
            代码块
        else:
            代码块

        if 条件:
            代码块
        elif 条件:
            代码块
        elif 条件:
            代码块

        if 条件:
            代码块
        elif 条件:
            代码块
        elif 条件:
            代码块
        else:
            代码块

        if 条件:
            if 。。。
        elif 条件:
            if。。。。
            elif。。。
        elif 条件:
            代码块
        else：
            if ....
                if...

02 作业讲解
03 while循环
    while 无限循环

04 格式化输出
    制作一个模板，某些位置的参数是动态的，像这样，就需要用格式化输出。

    字符串的动态替换

    how？
        详见代码 04 格式化输出.py
05 运算符
    ==  比较的两边的值是否相等
    = 赋值运算
    ！= 不等于
    += 举例： count = count + 1  简写 count += 1
    -=
    *=     : count = count * 5   简写 count *= 5
    /=
    **=
    //=
    。。。。
    逻辑运算符
    and  or  not
        具体看代码：05 运算符.py

06 编码初识


    太白： 今晚吃鸡！
    今：0101 0001
    晚：0101 1101
    吃：0101 0001
    鸡：0111 1100

    0101010 1110101 00000  01011
    上面的不合理,应该断位，

    01010001 01011101 01010001 01111100
    卢珂
    断位，
    要有一个密码本：记录的明文与二进制的对应关系。

    ASCII： 最初版本的密码本：所有的英文字母，数字，特殊字符。
            最初：
                一个字符 000 0001
                后来优化
                A:  01000001  8位 == 1个字节
                a:  01100001
                c:  01100011
            对于ASCII码来说：
                'hello laddy'  11个字符，11个字节。

    unicode：万国码，将所有国家的语言文字都写入这个密码本。
        起初：1个字符 16位 2个字节表示。
            A: 01000001 01000001
            b: 01000001 01100001
            中:01000001 01100101
        改版：1个字符 32位 4个字节表示。
            A: 01000001 01000001 01000001 01000001
            b: 01000001 01100001 01000001 01000001
            中:01000001 01100101 01000001 01000001
            浪费资源，占空间。

    utf-8: 最少用8位表示一个字符。
                   A:  01000001  一个字节
            欧洲文字:  01000001 01100001  两个字节
                   中：01000001 01100101 01000001  三个字节
            'old男孩'：9个字节

    gbk:国标，只包含 中文，英文(英文字母，数字，特殊字符)
        A:  01000001  一个字节
        中：01000001 01100101  两个字节


    8 bit  == 1bytes
    1024bytes == kb
    1024kb  ==  1MB
    1024MB == 1GB
    1024GB == 1TB
    1024TB == 1PB




    gbk utf-8 之间的转换？
07 预习博客
    http://www.cnblogs.com/jin-xin/articles/7562422.html
    str，int，bool，for循环。
08 今日作业